public class HammingCode {
    public static void main(String[] args) {
        int [] inp = {1,1,0,0,0,0,1,1,1,0,0,1};
        int [] msg = {2,9,9,1,9,1,0,0,9,0,0,1,1,1,0,0,9,1};
        String ParityScheme = "ODD";   // choose "ODD" or "EVEN"

        int msglength = msg.length;

        //  H1 calculation 
        int sum1 = 0, hammingbit1 = 0;
        for(int i=3; i<msglength; i+=2){   // every 2nd bit starting from 3
            sum1 = sum1 + msg[i];
        }
        if(ParityScheme.equals("ODD")){
            int r = sum1 % 2;
            if(r != 0){
                hammingbit1 = 0;
            } else {
                hammingbit1 = 1;
            }
        }

        //  H2 calculation 
        int sum2 = 0, hammingbit2 = 0;
        for(int i=3; i<msglength; i+=4){   // take 2, skip 2
            sum2 = sum2 + msg[i];
            if(i+1 < msglength) sum2 = sum2 + msg[i+1];
        }
        if(ParityScheme.equals("ODD")){
            int r = sum2 % 2;
            if(r != 0){
                hammingbit2 = 0;
            } else {
                hammingbit2 = 1;
            }
        }

        //  H3 calculation 
        int sum3 = 0, hammingbit3 = 0;
        for(int i=3; i<msglength; i+=8){   // take 4, skip 4
            sum3 = sum3 + msg[i];
            if(i+1 < msglength) sum3 = sum3 + msg[i+1];
            if(i+2 < msglength) sum3 = sum3 + msg[i+2];
            if(i+3 < msglength) sum3 = sum3 + msg[i+3];
        }
        if(ParityScheme.equals("ODD")){
            int r = sum3 % 2;
            if(r != 0){
                hammingbit3 = 0;
            } else {
                hammingbit3 = 1;
            }
        }

        // print result
        System.out.println("Message length: " + msglength);
        System.out.println("Sum1: " + sum1 + "  H1: " + hammingbit1);
        System.out.println("Sum2: " + sum2 + "  H2: " + hammingbit2);
        System.out.println("Sum3: " + sum3 + "  H3: " + hammingbit3);
    }
}
